version: '3.8'

services:
  fastapi-app:
    build: .
    ports:
      - "443:443"
    environment:
      # FASTAPI용 SSL 인증서는 유지
      - FASTAPI_SSL_CERT_FILE=/etc/letsencrypt/live/43.201.185.192.nip.io/fullchain.pem
      - FASTAPI_SSL_KEY_FILE=/etc/letsencrypt/live/43.201.185.192.nip.io/privkey.pem
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - CURL_CA_BUNDLE=""
      - REQUESTS_CA_BUNDLE=""
      - PYTHONHTTPSVERIFY=0
      # OpenAI용으로는 SSL 인증서 비활성화
      - OPENAI_SSL_CERT_FILE=""
      - OPENAI_SSL_KEY_FILE=""
    env_file:
      - .env
    volumes:
      - ./cache:/app/cache
      - /etc/letsencrypt:/etc/letsencrypt:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  # Optional: Add PostgreSQL service for local development
  # postgres:
  #   image: postgres:15
  #   environment:
  #     POSTGRES_DB: postgres
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

# volumes:
#   postgres_data:
